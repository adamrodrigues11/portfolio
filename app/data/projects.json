[
    {
        "id": "0",
        "slug": "music-festival",
        "title": "Hello World Music Festival",
        "category": "Academic Project",
        "description": "A mock music festival website and ticket management system.",
        "thumbnail": {
            "path": "/images/projects/internal-project.jpg",
            "alt": "A screenshot of the Hello World Music Festival website homepage."
        },
        "image": {
            "path": "/images/projects/internal-project-erd.png",
            "alt": "ERD for the application database."
        },
        "technologies": [
            "C#",
            "ASP.NET",
            "MS SQL",
            "Bootstrap",
            "Azure"
        ],
        "links": {
            "github": "https://github.com/CAddison4/Festival-App",
            "demo": "https://internalproject.azurewebsites.net/"
        },
        "demoLogin": {
            "email": "admin@home.com",
            "password": "P@ssw0rd!"
        },
        "appDetails": "For one of my larger projects in the Software Systems Developer program at BCIT, I worked in a team of four to develop a fully-featured website and ticket management system for a mock music festival. The goal of the project was to create a website using ASP.NET Core MVC and MS SQL that would allow for recurring revenue generation. The website allows users to browse artists for the current festival and purchase tickets via PayPal. It also includes an admin dashboard for managing festivals, ticket types, and viewing sales data.",
        "roleDetails": "As the database lead, my main responsibilities included devising a normalized database schema for the application (see ERD), and implementing the database using MS SQL and Entity Framework. My goal was to create a database structure that would allow for re-use of ticket types in several festivals, but with a specific alloted quantity of each type for a given festival. Additionally, Microsoft Identity Framework was used to generate the default authorization tables for the application; these are connected to the custom schema via the unique email address of each user. I also contributed to the development of the UI using Razor Pages and Bootstrap, and deployed the database and application to Azure."
    },
    {
        "id": "1",
        "slug": "agilitek-solutions",
        "title": "Agilitek Solutions",
        "category": "Industry Project",
        "description": "A data explorer and tool for analyzing correlations in a large customer dataset.",
        "thumbnail": {
            "path": "/images/projects/industry-project.jpg",
            "alt": "A screenshot of the Agilitek Solutions application segment details page."
        },
        "image": {
            "path": "/images/projects/industry-project-architecture.png",
            "alt": "Cloud architecture diagram for the application."
        },
        "technologies": [
            "React.js",
            "Node.js",
            "AWS",
            "PostgreSQL",
            "Tailwind CSS",
            "SST"
        ],
        "links": {
            "demo": "https://d3j8hsov25hvsw.cloudfront.net/"
        },
        "demoLogin": {
            "email": "agilitek",
            "password": "Agilitek2023!"
        },
        "appDetails": "For a project sponsored by Agilitek Solutions, my team built a data explorer and tool for analyzing correlations in an anonymized customer dataset with 100,000's of transaction records. The application allows an analyst to group customers into custom segments based on their demographics or transaction records in order to generate targeted comparisons and marketing insights. My main responsibilities included leading the design and implementation of the segment details page (both the UI and associated API endpoints), and contributing to the design of the overall application architecture.",
        "roleDetails": "Details Page Lead"
    }
]